generator zod {
  provider= "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Event {
  chat
  kick_user
  join_room
}
// User model represents a user in the chatGambit
model User {
  id           Int      @id @default(autoincrement()) // Primary key
  userId       String   @unique                     // Unique identifier for the user
  userName     String   // User's name
  socketId     String  
  chats        Chat[]   // User's chat messages
  rooms        Room[]   @relation("UserRooms")       // Rooms the user is a part of
  hostedRooms  Room[]   // Rooms hosted by the user
}

// Room model represents a chat room in the application
model Room {
  id           Int      @id @default(autoincrement()) // Primary key
  name         String   @unique                     // Unique room identifier
  host         User     @relation(fields: [hostId], references: [id])
  hostId       Int                                  // Relational scalar for the host
  chats        Chat[]                              // Chat messages in the room
  users        User[]   @relation("UserRooms")       // Users in the room
}

// Chat model represents a chat message
model Chat {
  id           Int      @id @default(autoincrement()) // Primary key
  user         User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId       String                                // Relational scalar for the user
  timeSent     String              // Timestamp of the message
  message      String                               // Message content
  room         Room     @relation(fields: [roomName], references: [name], onDelete: Cascade)
  roomName     String                               // Relational scalar for the room
  eventName    Event                  // Type of event
}
